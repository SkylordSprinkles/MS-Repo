 ############################################
 #     Particle Projectile Slashes v1.0     #
 ############################################
 #        sky#5095 / SkylordSprinkles       #
 ############################################
 # Particle Projectiles allow you to make slashes with what is essentially guessing and testing, instead of having to learn things such as EquationEffect.
 # Particle Projectiles also allow for things like better targetting, block detection, and interactions.
 
 # Basic horizontal slashes.
 # We will use three particle projectiles in order to "fill in" the slash.
 # Looks a lot better from a non-caster perspective (try f5 and looking down).
RightCrescent:
    spell-class: ".MultiSpell"
    # modifiers:
        # - sprinting castinstead RightCrescentSPRINTING
    spells:
        - RightCrescent_PartProj1
        - RightCrescent_PartProj2
        - RightCrescent_PartProj3
        # - IntermediaryHitbox # For the space in between you and the slash.
RightCrescent_PartProj1: &RightCrescentANCHOR
    spell-class: ".instant.ParticleProjectileSpell"
    relative-offset: "-0.5,1.6,-3"
    projectile-velocity: 20
    projectile-turn: 20
    tick-interval: 1
    max-distance: 5.6
    max-duration: 0.45
    stop-on-hit-entity: false
    stop-on-hit-ground: true
    hit-radius: 1
    change-pitch: false
    spell: pain5
    effects:
        1:
          position: special
          effect: particles
          particle-name: crit
          horiz-spread: 0
          vert-spread: 0
          speed: 0
          count: 2
          horiz-spread: 0.1
RightCrescent_PartProj2:
    <<: *RightCrescentANCHOR
    relative-offset: "-0.25,1.6,-3"
    max-distance: 5.8
    max-duration: 0.45
    spell: nonetargeted
RightCrescent_PartProj3:
    <<: *RightCrescentANCHOR
    relative-offset: "0,1.6,-3"
    max-distance: 6
    max-duration: 0.45
    spell: nonetargeted
    
IntermediaryHitbox:
    spell-class: ".instant.ParticleProjectileSpell"
    relative-offset: "1,1.6,-4"
    projectile-velocity: 20
    projectile-horiz-offset: 90
    tick-interval: 1
    max-distance: 6
    max-duration: 0.45
    stop-on-hit-entity: false
    stop-on-hit-ground: true
    hit-radius: 1
    change-pitch: false
    spell: pain5
    # effects:
        # 1:
          # position: special
          # effect: particles
          # particle-name: crit
          # horiz-spread: 0
          # vert-spread: 0
          # speed: 0
          # count: 2
          # horiz-spread: 0.1
   
 # Reversed the RightCrescent by inverting projectile-turn and relative-offset's third number.
LeftCrescent:
    spell-class: ".MultiSpell"
    spells:
        - LeftCrescent_PartProj1
        - LeftCrescent_PartProj2
        - LeftCrescent_PartProj3
        # - IntermediaryHitbox 
LeftCrescent_PartProj1: &LeftCrescentANCHOR
    spell-class: ".instant.ParticleProjectileSpell"
    relative-offset: "-0.5,1.6,3"
    projectile-velocity: 20
    projectile-turn: -20
    tick-interval: 1
    max-distance: 5.6
    max-duration: 0.45
    stop-on-hit-entity: false
    stop-on-hit-ground: true
    hit-radius: 1
    change-pitch: false
    spell: pain5
    effects:
        1:
          position: special
          effect: particles
          particle-name: crit
          horiz-spread: 0
          vert-spread: 0
          speed: 0
          count: 2
          horiz-spread: 0.1
LeftCrescent_PartProj2:
    <<: *LeftCrescentANCHOR
    relative-offset: "-0.25,1.6,3"
    max-distance: 5.8
    max-duration: 0.45
    spell: nonetargeted
LeftCrescent_PartProj3:
    <<: *LeftCrescentANCHOR
    max-distance: 6
    max-duration: 0.45
    spell: nonetargeted
          
 # If we want spread, we cannot simply cast Particle Projectiles with spread on a multi. They will all have different spreads.
 # Instead, we will use a targeter Particle Projectile with spread to pass that spread on to every slash Particle Projectile.
SpreadExample:
    spell-class: ".instant.ParticleProjectileSpell"
    relative-offset: 0,1.6,0
    projectile-velocity: 15
    projectile-vertical-spread: 1
    tick-interval: 1
    max-duration: 0.1
    change-pitch: false
    stop-on-hit-entity: false
    stop-on-hit-ground: false
    hit-air-after-duration: true
    spell-on-duration-end: SpreadExample_Multi
    # effects:
       # 1:
        # position: special
        # effect: particles
        # particle-name: flame
        # horiz-spread: 0
        # vert-spread: 0
        # speed: 0
        # count: 1
SpreadExample_Multi:
    spell-class: ".TargetedMultiSpell"
    spells:
        - SpreadExample_PartProj1
        - SpreadExample_PartProj2
        - SpreadExample_PartProj3
SpreadExample_PartProj1: &SpreadExampleANCHOR
    spell-class: ".instant.ParticleProjectileSpell"
    relative-offset: "-0.5,1.6,-3"
    projectile-velocity: 20
    projectile-turn: 20
    tick-interval: 1
    max-distance: 5.6
    max-duration: 0.45
    stop-on-hit-entity: false
    stop-on-hit-ground: true
    change-pitch: false
    spell: pain5
    effects:
        1:
          position: special
          effect: particles
          particle-name: crit
          horiz-spread: 0
          vert-spread: 0
          speed: 0
          count: 2
          horiz-spread: 0.1
SpreadExample_PartProj2:
    <<: *SpreadExampleANCHOR
    relative-offset: "-0.25,1.6,-3"
    max-distance: 5.8
    max-duration: 0.45
    spell: nonetargeted
SpreadExample_PartProj3:
    <<: *SpreadExampleANCHOR
    relative-offset: "0,1.6,-3"
    max-distance: 6
    max-duration: 0.45
    spell: nonetargeted
    
 # Interaction Parrying Simple Example
InteractionParryExample:
    spell-class: ".instant.ParticleProjectileSpell"
    relative-offset: "-0.5,1.6,-3"
    projectile-velocity: 20
    projectile-turn: 20
    tick-interval: 1
    max-distance: 6
    max-duration: 0.45
    stop-on-hit-entity: false
    stop-on-hit-ground: true
    hit-radius: 1
    change-pitch: false
    spell: nonetargeted
    interactions:
        - InteractionParryExample InteractionParrySOC(mode=hard)
        # Particle Projectiles can now interact with themselves.
        # spellOnCollision caster almost seems "random" in these cases; depends on positioning.
    effects:
        1:
          position: special
          effect: particles
          particle-name: crit
          horiz-spread: 0
          vert-spread: 0
          speed: 0
          count: 2
          horiz-spread: 0.1     
InteractionParrySOC: # Basically a dummy. Can't just put any spell or it won't even collide.
    spell-class: ".targeted.AreaEffectSpell"
    always-granted: true
    helper-spell: true
    fail-if-no-targets: false
    horizontal-radius: 1
    vertical-radius: 1
    # str-cast-self: "Interaction Cast Success!"
    spells:
        - nonetargeted